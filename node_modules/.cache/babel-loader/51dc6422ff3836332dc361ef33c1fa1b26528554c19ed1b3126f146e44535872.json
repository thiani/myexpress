{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thiani\\\\myexpress\\\\myexpresslimited\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.tsx\nimport React, { createContext, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const login = useCallback(async (email, password) => {\n    try {\n      setError(null);\n      // Mock API call - replace with actual API endpoint\n      const response = await new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (email === 'admin@example.com' && password === 'password') {\n            resolve({\n              id: '1',\n              email: 'admin@example.com',\n              name: 'Admin User',\n              role: 'admin',\n              avatar: '/api/placeholder/32/32'\n            });\n          } else {\n            reject(new Error('Invalid credentials'));\n          }\n        }, 1000);\n      });\n      setUser(response);\n      // Store auth token in localStorage\n      localStorage.setItem('authToken', 'mock-jwt-token');\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Login failed');\n      throw err;\n    }\n  }, []);\n  const logout = useCallback(() => {\n    setUser(null);\n    localStorage.removeItem('authToken');\n    navigate('/auth/login');\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated: !!user,\n      login,\n      logout,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"gUrDVC9mfas1iUv3SxnonelKcwI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useCallback","useNavigate","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","error","setError","navigate","login","email","password","response","Promise","resolve","reject","setTimeout","id","name","role","avatar","Error","localStorage","setItem","err","message","logout","removeItem","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Thiani/myexpress/myexpresslimited/src/context/AuthContext.tsx"],"sourcesContent":["// src/context/AuthContext.tsx\r\nimport React, { createContext, useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n  role: 'admin' | 'manager';\r\n  avatar?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  error: string | null;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  const login = useCallback(async (email: string, password: string) => {\r\n    try {\r\n      setError(null);\r\n      // Mock API call - replace with actual API endpoint\r\n      const response = await new Promise<User>((resolve, reject) => {\r\n        setTimeout(() => {\r\n          if (email === 'admin@example.com' && password === 'password') {\r\n            resolve({\r\n              id: '1',\r\n              email: 'admin@example.com',\r\n              name: 'Admin User',\r\n              role: 'admin',\r\n              avatar: '/api/placeholder/32/32'\r\n            });\r\n          } else {\r\n            reject(new Error('Invalid credentials'));\r\n          }\r\n        }, 1000);\r\n      });\r\n\r\n      setUser(response);\r\n      // Store auth token in localStorage\r\n      localStorage.setItem('authToken', 'mock-jwt-token');\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Login failed');\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setUser(null);\r\n    localStorage.removeItem('authToken');\r\n    navigate('/auth/login');\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      isAuthenticated: !!user,\r\n      login,\r\n      logout,\r\n      error\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACnE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkB/C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEhF,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,KAAK,GAAGd,WAAW,CAAC,OAAOe,KAAa,EAAEC,QAAgB,KAAK;IACnE,IAAI;MACFJ,QAAQ,CAAC,IAAI,CAAC;MACd;MACA,MAAMK,QAAQ,GAAG,MAAM,IAAIC,OAAO,CAAO,CAACC,OAAO,EAAEC,MAAM,KAAK;QAC5DC,UAAU,CAAC,MAAM;UACf,IAAIN,KAAK,KAAK,mBAAmB,IAAIC,QAAQ,KAAK,UAAU,EAAE;YAC5DG,OAAO,CAAC;cACNG,EAAE,EAAE,GAAG;cACPP,KAAK,EAAE,mBAAmB;cAC1BQ,IAAI,EAAE,YAAY;cAClBC,IAAI,EAAE,OAAO;cACbC,MAAM,EAAE;YACV,CAAC,CAAC;UACJ,CAAC,MAAM;YACLL,MAAM,CAAC,IAAIM,KAAK,CAAC,qBAAqB,CAAC,CAAC;UAC1C;QACF,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;MAEFhB,OAAO,CAACO,QAAQ,CAAC;MACjB;MACAU,YAAY,CAACC,OAAO,CAAC,WAAW,EAAE,gBAAgB,CAAC;IACrD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZjB,QAAQ,CAACiB,GAAG,YAAYH,KAAK,GAAGG,GAAG,CAACC,OAAO,GAAG,cAAc,CAAC;MAC7D,MAAMD,GAAG;IACX;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,MAAM,GAAG/B,WAAW,CAAC,MAAM;IAC/BU,OAAO,CAAC,IAAI,CAAC;IACbiB,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC;IACpCnB,QAAQ,CAAC,aAAa,CAAC;EACzB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEV,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAC3BzB,IAAI;MACJ0B,eAAe,EAAE,CAAC,CAAC1B,IAAI;MACvBK,KAAK;MACLiB,MAAM;MACNpB;IACF,CAAE;IAAAJ,QAAA,EACCA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CAnDWF,YAAqD;EAAA,QAG/CL,WAAW;AAAA;AAAAuC,EAAA,GAHjBlC,YAAqD;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}