{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thiani\\\\myexpress\\\\myexpresslimited\\\\src\\\\components\\\\auth\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\n// src/components/auth/ProtectedRoute.tsx\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    user\n  } = useAuth();\n  const location = useLocation();\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/auth/login\",\n      state: {\n        from: location.pathname\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  if (allowedRoles && user && !allowedRoles.includes(user.role)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/admin\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"eBZQushvzp9k1PDvsZlyRAWOAfg=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","allowedRoles","_s","isAuthenticated","user","location","to","state","from","pathname","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes","role","_c","$RefreshReg$"],"sources":["C:/Users/Thiani/myexpress/myexpresslimited/src/components/auth/ProtectedRoute.tsx"],"sourcesContent":["// src/components/auth/ProtectedRoute.tsx\r\nimport React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  allowedRoles?: ('admin' | 'manager')[];\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \r\n  children, \r\n  allowedRoles \r\n}) => {\r\n  const { isAuthenticated, user } = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/auth/login\" state={{ from: location.pathname }} replace />;\r\n  }\r\n\r\n  if (allowedRoles && user && !allowedRoles.includes(user.role)) {\r\n    return <Navigate to=\"/admin\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO9C,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGV,OAAO,CAAC,CAAC;EAC3C,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACU,eAAe,EAAE;IACpB,oBAAOP,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,aAAa;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEH,QAAQ,CAACI;MAAS,CAAE;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClF;EAEA,IAAIb,YAAY,IAAIG,IAAI,IAAI,CAACH,YAAY,CAACc,QAAQ,CAACX,IAAI,CAACY,IAAI,CAAC,EAAE;IAC7D,oBAAOpB,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,QAAQ;MAACI,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,oBAAOlB,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACE,EAAA,CAhBIH,cAA6C;EAAA,QAIfL,OAAO,EACxBD,WAAW;AAAA;AAAAwB,EAAA,GALxBlB,cAA6C;AAkBnD,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}