{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thiani\\\\myexpress\\\\myexpresslimited\\\\src\\\\context\\\\CartContext.tsx\",\n  _s = $RefreshSig$();\n// src/context/CartContext.tsx\nimport React, { createContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DELIVERY_FEE_THRESHOLD = 5000; // Free delivery above 5000 KES\nconst DELIVERY_FEE = 200;\nconst CartContext = /*#__PURE__*/createContext(undefined);\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState({\n    items: [],\n    total: 0,\n    deliveryFee: 0\n  });\n  const calculateTotals = useCallback(() => {\n    const subtotal = cart.items.reduce((sum, item) => sum + item.product.price * item.quantity, 0);\n    const deliveryFee = subtotal >= DELIVERY_FEE_THRESHOLD ? 0 : DELIVERY_FEE;\n    const total = subtotal + deliveryFee;\n    return {\n      subtotal,\n      total,\n      deliveryFee\n    };\n  }, [cart.items]);\n  const addToCart = useCallback((product, quantity = 1) => {\n    setCart(prevCart => {\n      const existingItem = prevCart.items.find(item => item.productId === product.id);\n      let newItems;\n      if (existingItem) {\n        newItems = prevCart.items.map(item => item.productId === product.id ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      } else {\n        newItems = [...prevCart.items, {\n          productId: product.id,\n          quantity,\n          product\n        }];\n      }\n      const {\n        total,\n        deliveryFee\n      } = calculateTotals();\n      return {\n        items: newItems,\n        total,\n        deliveryFee\n      };\n    });\n  }, [calculateTotals]);\n  const removeFromCart = useCallback(productId => {\n    setCart(prevCart => {\n      const newItems = prevCart.items.filter(item => item.productId !== productId);\n      const {\n        total,\n        deliveryFee\n      } = calculateTotals();\n      return {\n        items: newItems,\n        total,\n        deliveryFee\n      };\n    });\n  }, [calculateTotals]);\n  const updateQuantity = useCallback((productId, quantity) => {\n    setCart(prevCart => {\n      const newItems = prevCart.items.map(item => item.productId === productId ? {\n        ...item,\n        quantity: Math.max(0, quantity)\n      } : item).filter(item => item.quantity > 0);\n      const {\n        total,\n        deliveryFee\n      } = calculateTotals();\n      return {\n        items: newItems,\n        total,\n        deliveryFee\n      };\n    });\n  }, [calculateTotals]);\n  const clearCart = useCallback(() => {\n    setCart({\n      items: [],\n      total: 0,\n      deliveryFee: 0\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      calculateTotals\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"WN5JmdP0J9cJjgfQ5DvqoffTxi8=\");\n_c = CartProvider;\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useCallback","jsxDEV","_jsxDEV","DELIVERY_FEE_THRESHOLD","DELIVERY_FEE","CartContext","undefined","CartProvider","children","_s","cart","setCart","items","total","deliveryFee","calculateTotals","subtotal","reduce","sum","item","product","price","quantity","addToCart","prevCart","existingItem","find","productId","id","newItems","map","removeFromCart","filter","updateQuantity","Math","max","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Thiani/myexpress/myexpresslimited/src/context/CartContext.tsx"],"sourcesContent":["// src/context/CartContext.tsx\r\nimport React, { createContext, useState, useCallback } from 'react';\r\nimport type { CartItem, Cart, CartContextType, CartTotals } from '../types/cart';\r\nimport type { Product } from '../types/product';\r\n\r\nconst DELIVERY_FEE_THRESHOLD = 5000; // Free delivery above 5000 KES\r\nconst DELIVERY_FEE = 200;\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [cart, setCart] = useState<Cart>({\r\n    items: [],\r\n    total: 0,\r\n    deliveryFee: 0\r\n  });\r\n\r\n  const calculateTotals = useCallback((): CartTotals => {\r\n    const subtotal = cart.items.reduce(\r\n      (sum, item) => sum + (item.product.price * item.quantity),\r\n      0\r\n    );\r\n    const deliveryFee = subtotal >= DELIVERY_FEE_THRESHOLD ? 0 : DELIVERY_FEE;\r\n    const total = subtotal + deliveryFee;\r\n\r\n    return { subtotal, total, deliveryFee };\r\n  }, [cart.items]);\r\n\r\n  const addToCart = useCallback((product: Product, quantity: number = 1) => {\r\n    setCart(prevCart => {\r\n      const existingItem = prevCart.items.find(item => item.productId === product.id);\r\n      \r\n      let newItems: CartItem[];\r\n      if (existingItem) {\r\n        newItems = prevCart.items.map(item =>\r\n          item.productId === product.id\r\n            ? { ...item, quantity: item.quantity + quantity }\r\n            : item\r\n        );\r\n      } else {\r\n        newItems = [...prevCart.items, { productId: product.id, quantity, product }];\r\n      }\r\n\r\n      const { total, deliveryFee } = calculateTotals();\r\n      \r\n      return {\r\n        items: newItems,\r\n        total,\r\n        deliveryFee\r\n      };\r\n    });\r\n  }, [calculateTotals]);\r\n\r\n  const removeFromCart = useCallback((productId: string) => {\r\n    setCart(prevCart => {\r\n      const newItems = prevCart.items.filter(item => item.productId !== productId);\r\n      const { total, deliveryFee } = calculateTotals();\r\n      \r\n      return {\r\n        items: newItems,\r\n        total,\r\n        deliveryFee\r\n      };\r\n    });\r\n  }, [calculateTotals]);\r\n\r\n  const updateQuantity = useCallback((productId: string, quantity: number) => {\r\n    setCart(prevCart => {\r\n      const newItems = prevCart.items.map(item =>\r\n        item.productId === productId\r\n          ? { ...item, quantity: Math.max(0, quantity) }\r\n          : item\r\n      ).filter(item => item.quantity > 0);\r\n\r\n      const { total, deliveryFee } = calculateTotals();\r\n\r\n      return {\r\n        items: newItems,\r\n        total,\r\n        deliveryFee\r\n      };\r\n    });\r\n  }, [calculateTotals]);\r\n\r\n  const clearCart = useCallback(() => {\r\n    setCart({ items: [], total: 0, deliveryFee: 0 });\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider value={{\r\n      cart,\r\n      addToCart,\r\n      removeFromCart,\r\n      updateQuantity,\r\n      clearCart,\r\n      calculateTotals\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}