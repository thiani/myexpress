{"ast":null,"code":"import React from'react';import{CheckCircle2,AlertCircle,Clock,XCircle}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const statusConfigs={success:{icon:CheckCircle2,bgColor:'bg-green-50',textColor:'text-green-700',iconColor:'text-green-500'},warning:{icon:AlertCircle,bgColor:'bg-yellow-50',textColor:'text-yellow-700',iconColor:'text-yellow-500'},error:{icon:XCircle,bgColor:'bg-red-50',textColor:'text-red-700',iconColor:'text-red-500'},pending:{icon:Clock,bgColor:'bg-blue-50',textColor:'text-blue-700',iconColor:'text-blue-500'},active:{icon:CheckCircle2,bgColor:'bg-green-50',textColor:'text-green-700',iconColor:'text-green-500'},inactive:{icon:XCircle,bgColor:'bg-gray-50',textColor:'text-gray-700',iconColor:'text-gray-500'},processing:{icon:Clock,bgColor:'bg-purple-50',textColor:'text-purple-700',iconColor:'text-purple-500'},completed:{icon:CheckCircle2,bgColor:'bg-green-50',textColor:'text-green-700',iconColor:'text-green-500'},cancelled:{icon:XCircle,bgColor:'bg-red-50',textColor:'text-red-700',iconColor:'text-red-500'},failed:{icon:XCircle,bgColor:'bg-red-50',textColor:'text-red-700',iconColor:'text-red-500'},paid:{icon:CheckCircle2,bgColor:'bg-green-50',textColor:'text-green-700',iconColor:'text-green-500'}};const StatusBadge=_ref=>{let{status,text,size='md'}=_ref;const config=statusConfigs[status];const displayText=text||status.charAt(0).toUpperCase()+status.slice(1);return/*#__PURE__*/_jsxs(\"span\",{className:\"\\n        inline-flex items-center rounded-full\\n        \".concat(config.bgColor,\" \\n        \").concat(size==='sm'?'px-2 py-0.5 text-xs':'px-3 py-1 text-sm',\"\\n      \"),children:[/*#__PURE__*/_jsx(config.icon,{className:\"\\n          \".concat(config.iconColor,\"\\n          \").concat(size==='sm'?'w-3 h-3 mr-1':'w-4 h-4 mr-2',\"\\n        \")}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium \".concat(config.textColor),children:displayText})]});};// Usage examples:\n// <StatusBadge status=\"success\" />\n// <StatusBadge status=\"pending\" text=\"In Progress\" size=\"sm\" />\n// <StatusBadge status=\"error\" text=\"Failed\" />\nexport default StatusBadge;","map":{"version":3,"names":["React","CheckCircle2","AlertCircle","Clock","XCircle","jsx","_jsx","jsxs","_jsxs","statusConfigs","success","icon","bgColor","textColor","iconColor","warning","error","pending","active","inactive","processing","completed","cancelled","failed","paid","StatusBadge","_ref","status","text","size","config","displayText","charAt","toUpperCase","slice","className","concat","children"],"sources":["C:/Users/Thiani/myexpress/myexpresslimited/src/components/admin/common/StatusBadge.tsx"],"sourcesContent":["import React from 'react';\r\nimport { \r\n  CheckCircle2, \r\n  AlertCircle, \r\n  Clock, \r\n  XCircle,\r\n  LucideIcon \r\n} from 'lucide-react';\r\nimport type { StatusType } from '../../../types/status';\r\n\r\ninterface StatusConfig {\r\n  icon: LucideIcon;\r\n  bgColor: string;\r\n  textColor: string;\r\n  iconColor: string;\r\n}\r\n\r\ninterface StatusBadgeProps {\r\n  status: StatusType;\r\n  text?: string;\r\n  size?: 'sm' | 'md';\r\n}\r\n\r\nconst statusConfigs: Record<StatusType, StatusConfig> = {\r\n  success: {\r\n    icon: CheckCircle2,\r\n    bgColor: 'bg-green-50',\r\n    textColor: 'text-green-700',\r\n    iconColor: 'text-green-500'\r\n  },\r\n  warning: {\r\n    icon: AlertCircle,\r\n    bgColor: 'bg-yellow-50',\r\n    textColor: 'text-yellow-700',\r\n    iconColor: 'text-yellow-500'\r\n  },\r\n  error: {\r\n    icon: XCircle,\r\n    bgColor: 'bg-red-50',\r\n    textColor: 'text-red-700',\r\n    iconColor: 'text-red-500'\r\n  },\r\n  pending: {\r\n    icon: Clock,\r\n    bgColor: 'bg-blue-50',\r\n    textColor: 'text-blue-700',\r\n    iconColor: 'text-blue-500'\r\n  },\r\n  active: {\r\n    icon: CheckCircle2,\r\n    bgColor: 'bg-green-50',\r\n    textColor: 'text-green-700',\r\n    iconColor: 'text-green-500'\r\n  },\r\n  inactive: {\r\n    icon: XCircle,\r\n    bgColor: 'bg-gray-50',\r\n    textColor: 'text-gray-700',\r\n    iconColor: 'text-gray-500'\r\n  },\r\n  processing: {\r\n    icon: Clock,\r\n    bgColor: 'bg-purple-50',\r\n    textColor: 'text-purple-700',\r\n    iconColor: 'text-purple-500'\r\n  },\r\n  completed: {\r\n    icon: CheckCircle2,\r\n    bgColor: 'bg-green-50',\r\n    textColor: 'text-green-700',\r\n    iconColor: 'text-green-500'\r\n  },\r\n  cancelled: {\r\n    icon: XCircle,\r\n    bgColor: 'bg-red-50',\r\n    textColor: 'text-red-700',\r\n    iconColor: 'text-red-500'\r\n  },\r\n  failed: {\r\n    icon: XCircle,\r\n    bgColor: 'bg-red-50',\r\n    textColor: 'text-red-700',\r\n    iconColor: 'text-red-500'\r\n  },\r\n  paid: {\r\n    icon: CheckCircle2,\r\n    bgColor: 'bg-green-50',\r\n    textColor: 'text-green-700',\r\n    iconColor: 'text-green-500'\r\n  }\r\n};\r\n\r\n\r\n\r\nconst StatusBadge: React.FC<StatusBadgeProps> = ({ \r\n  status, \r\n  text, \r\n  size = 'md' \r\n}) => {\r\n  const config = statusConfigs[status];\r\n  const displayText = text || status.charAt(0).toUpperCase() + status.slice(1);\r\n\r\n  return (\r\n    <span\r\n      className={`\r\n        inline-flex items-center rounded-full\r\n        ${config.bgColor} \r\n        ${size === 'sm' ? 'px-2 py-0.5 text-xs' : 'px-3 py-1 text-sm'}\r\n      `}\r\n    >\r\n      <config.icon \r\n        className={`\r\n          ${config.iconColor}\r\n          ${size === 'sm' ? 'w-3 h-3 mr-1' : 'w-4 h-4 mr-2'}\r\n        `} \r\n      />\r\n      <span className={`font-medium ${config.textColor}`}>\r\n        {displayText}\r\n      </span>\r\n    </span>\r\n  );\r\n};\r\n\r\n// Usage examples:\r\n// <StatusBadge status=\"success\" />\r\n// <StatusBadge status=\"pending\" text=\"In Progress\" size=\"sm\" />\r\n// <StatusBadge status=\"error\" text=\"Failed\" />\r\n\r\nexport default StatusBadge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}