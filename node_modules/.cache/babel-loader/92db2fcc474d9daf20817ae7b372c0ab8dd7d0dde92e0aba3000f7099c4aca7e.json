{"ast":null,"code":"// src/utils/helpers.ts\nexport const formatPrice = price => {\n  return new Intl.NumberFormat('en-KE', {\n    style: 'currency',\n    currency: 'KES',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(price);\n};\nexport const formatDate = date => {\n  return new Intl.DateTimeFormat('en-KE', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  }).format(new Date(date));\n};\n\n// Validate Kenyan phone number\nexport const isValidKenyanPhone = phone => {\n  // Supports formats: 07XX XXX XXX, 254-7XX-XXX-XXX, +254 7XX XXX XXX\n  const regex = /^(?:254|\\+254|0)?([71])[0-9]{8}$/;\n  return regex.test(phone.replace(/[\\s-]/g, ''));\n};\n\n// Format phone number to M-PESA format (254XXXXXXXXX)\nexport const formatPhoneForMpesa = phone => {\n  const cleaned = phone.replace(/[\\s-]/g, '');\n  if (cleaned.startsWith('+')) {\n    return cleaned.substring(1);\n  }\n  if (cleaned.startsWith('0')) {\n    return '254' + cleaned.substring(1);\n  }\n  return cleaned;\n};\nexport const generateSlug = text => {\n  return text.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)+/g, '');\n};","map":{"version":3,"names":["formatPrice","price","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatDate","date","DateTimeFormat","year","month","day","hour","minute","Date","isValidKenyanPhone","phone","regex","test","replace","formatPhoneForMpesa","cleaned","startsWith","substring","generateSlug","text","toLowerCase"],"sources":["C:/Users/Thiani/myexpress/myexpresslimited/src/utils/helpers.ts"],"sourcesContent":["// src/utils/helpers.ts\r\nexport const formatPrice = (price: number): string => {\r\n  return new Intl.NumberFormat('en-KE', {\r\n    style: 'currency',\r\n    currency: 'KES',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  }).format(price);\r\n};\r\n\r\nexport const formatDate = (date: string | Date): string => {\r\n  return new Intl.DateTimeFormat('en-KE', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  }).format(new Date(date));\r\n};\r\n\r\n// Validate Kenyan phone number\r\nexport const isValidKenyanPhone = (phone: string): boolean => {\r\n  // Supports formats: 07XX XXX XXX, 254-7XX-XXX-XXX, +254 7XX XXX XXX\r\n  const regex = /^(?:254|\\+254|0)?([71])[0-9]{8}$/;\r\n  return regex.test(phone.replace(/[\\s-]/g, ''));\r\n};\r\n\r\n// Format phone number to M-PESA format (254XXXXXXXXX)\r\nexport const formatPhoneForMpesa = (phone: string): string => {\r\n  const cleaned = phone.replace(/[\\s-]/g, '');\r\n  if (cleaned.startsWith('+')) {\r\n    return cleaned.substring(1);\r\n  }\r\n  if (cleaned.startsWith('0')) {\r\n    return '254' + cleaned.substring(1);\r\n  }\r\n  return cleaned;\r\n};\r\n\r\nexport const generateSlug = (text: string): string => {\r\n  return text\r\n    .toLowerCase()\r\n    .replace(/[^a-z0-9]+/g, '-')\r\n    .replace(/(^-|-$)+/g, '');\r\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAIC,KAAa,IAAa;EACpD,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IACpCC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE,KAAK;IACfC,qBAAqB,EAAE,CAAC;IACxBC,qBAAqB,EAAE;EACzB,CAAC,CAAC,CAACC,MAAM,CAACP,KAAK,CAAC;AAClB,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAIC,IAAmB,IAAa;EACzD,OAAO,IAAIR,IAAI,CAACS,cAAc,CAAC,OAAO,EAAE;IACtCC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC,CAAC,CAACR,MAAM,CAAC,IAAIS,IAAI,CAACP,IAAI,CAAC,CAAC;AAC3B,CAAC;;AAED;AACA,OAAO,MAAMQ,kBAAkB,GAAIC,KAAa,IAAc;EAC5D;EACA,MAAMC,KAAK,GAAG,kCAAkC;EAChD,OAAOA,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAChD,CAAC;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAIJ,KAAa,IAAa;EAC5D,MAAMK,OAAO,GAAGL,KAAK,CAACG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;EAC3C,IAAIE,OAAO,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;IAC3B,OAAOD,OAAO,CAACE,SAAS,CAAC,CAAC,CAAC;EAC7B;EACA,IAAIF,OAAO,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;IAC3B,OAAO,KAAK,GAAGD,OAAO,CAACE,SAAS,CAAC,CAAC,CAAC;EACrC;EACA,OAAOF,OAAO;AAChB,CAAC;AAED,OAAO,MAAMG,YAAY,GAAIC,IAAY,IAAa;EACpD,OAAOA,IAAI,CACRC,WAAW,CAAC,CAAC,CACbP,OAAO,CAAC,aAAa,EAAE,GAAG,CAAC,CAC3BA,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}